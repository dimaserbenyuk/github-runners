name: fetch-and-post-jenkins

'on':
  schedule:
    - cron: 0 13 * * 1
  workflow_dispatch:

jobs:
  fetch-jenkins-updates:
    name: Fetch and Post Jenkins Updates
    runs-on: kuber

    steps:
      - uses: actions/checkout@v4

      - name: Set Branch Name
        run: |
          echo "NEW_BRANCH_NAME=auto-update-jenkins-cd-plugins-$(date +%Y-%m-%d)-${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Fetch Jenkins Updates
        id: fetch-jenkins-updates
        env:
          JENKINS_API: https://jenkins.example.com/updateCenter/api/json?depth=2&pretty=true&tree=sites%5Bupdates%5Bname,version,title%5D%5D
        run: |
          response=$(curl -k -X POST -u ${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }} $JENKINS_API)
          updates=$(echo "$response" | jq -r '.sites[].updates[] | {name: .name, version: .version} | @base64')
          echo "updates=$(echo $updates)" >> $GITHUB_OUTPUT

      # - name: Update plugins.yaml
      #   id: update-plugins
      #   env:
      #     EXCLUDE_PLUGINS: ''
      #     # example: EXCLUDE_PLUGINS: "plugin1,plugin2"
      #   run: |
      #     pr_body="#### üí°Ô∏è Rationale\n\nThis pull request updates the Jenkins plugins in \`cd-jenkins\` to their latest versions. Keeping plugins up-to-date ensures we have the latest features, bug fixes and security patches.\n\n#### üîµ Affected components\n\nThis change updates the Jenkins controller pod in the \`cd-jenkins\` Helm release. During the rolling update, there may be a brief jenkins outage.\n\n## Plugin Updates\n\n"
      #     IFS=',' read -ra EXCLUDE_ARRAY <<< "$EXCLUDE_PLUGINS"
      #     for update in ${{ steps.fetch-jenkins-updates.outputs.updates }}; do
      #       decoded=$(echo $update | base64 --decode)
      #       plugin_name=$(echo $decoded | jq -r '.name')
      #       new_version=$(echo $decoded | jq -r '.version')
      #       if [[ " ${EXCLUDE_ARRAY[@]} " =~ " ${plugin_name} " ]]; then
      #         continue
      #       fi
      #       old_version=$(yq e ".jenkins.controller.installPlugins[] | select(test(\"^$plugin_name:\"))" env/mgmt-aws/kubernetes/helm/cd-jenkins/plugins.yaml | cut -d ':' -f 2)
      #       if [ "$new_version" != "$old_version" ]; then
      #         yq e -i "with(.jenkins.controller.installPlugins[]; select(test(\"^$plugin_name:\")) |= sub(\":.*$\"; \":$new_version\"))" env/mgmt-aws/kubernetes/helm/cd-jenkins/plugins.yaml
      #         pr_body+="- \`$plugin_name\` updated from \`$old_version\` to \`$new_version\` - [CHANGELOG](https://plugins.jenkins.io/$plugin_name)\n"
      #         update_count=$((update_count + 1))
      #       fi
      #     done
      #     # Remove duplicate plugins
      #     yq e -i '.jenkins.controller.installPlugins |= unique' env/mgmt-aws/kubernetes/helm/cd-jenkins/plugins.yaml
      #     pr_body+="\nThis PR has been generated by [fetch-and-post-jenkins-updates-cd](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/.github/workflows/fetch-and-post-jenkins-updates-cd.yaml)."
      #     echo "PR_BODY<<EOF" >> $GITHUB_ENV
      #     echo -e "$pr_body" >> $GITHUB_ENV
      #     echo "EOF" >> $GITHUB_ENV
      #     echo "UPDATE_COUNT=$update_count" >> $GITHUB_ENV

      # - name: Create GitHub App Token
      #   id: app-token
      #   uses: actions/create-github-app-token@v1
      #   with:
      #     app-id: ${{ vars.LF_GH_APP_ID }}
      #     private-key: ${{ secrets.LF_GH_APP_PRIVATE_KEY }}
      #     owner: lotusflare

      # - name: Create Pull Request
      #   if: env.UPDATE_COUNT > 0
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     token: ${{ steps.app-token.outputs.token }}
      #     author: lf-actions[bot] <915556+lf-actions[bot]@users.noreply.github.com>
      #     committer: lf-actions[bot] <915556+lf-actions[bot]@users.noreply.github.com>
      #     commit-message: Update Jenkins plugins in cd-jenkins
      #     branch: ${{ env.NEW_BRANCH_NAME }}
      #     title: Update Jenkins plugins in cd-jenkins
      #     body: ${{ env.PR_BODY }}
      #     labels: |
      #       automated pr
